@using SpotifyServices;
@using BlazorApp1.Data;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager NavigationManager
@* @inject HttpClient Http *@
@inject IConfiguration _Configuration
@* @inject IJSRuntime JSRuntime *@
@inject ProtectedSessionStorage ProtectedSessionStore

@page "/auth/spotifycallback"
@* @rendermode InteractiveServer *@

<h3>SpotifyCallback</h3>

@code {
    private bool isInitialized = false;
    private string? spotifyAuthCode = null;

    protected override void OnInitialized()
    {
        // ✅ Extract Spotify code from URL
        var uri = new Uri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        spotifyAuthCode = query["code"];

        Console.WriteLine($"Extracted Spotify auth code: {spotifyAuthCode}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized && !string.IsNullOrEmpty(spotifyAuthCode))
        {
            isInitialized = true; // Prevent multiple executions
            await ProcessSpotifyAuth();
        }
    }

    private async Task ProcessSpotifyAuth()
    {
        Console.WriteLine("Processing Spotify authentication...");

        try
        {
            if (!string.IsNullOrEmpty(spotifyAuthCode))
            {
                // ✅ Process OAuth token exchange
                SpotifyAppServices spotifyAppServices = new SpotifyAppServices(_Configuration, ProtectedSessionStore);
                await spotifyAppServices.ExchangeCodeForToken(spotifyAuthCode);
                await spotifyAppServices.GetTokenAsync();

                // ✅ Store the token in session storage (only allowed in OnAfterRenderAsync)
                await ProtectedSessionStore.SetAsync("spotifyToken", spotifyAuthCode);
            }

            // ✅ Redirect after processing is complete
            NavigationManager.NavigateTo("https://localhost:7262/search", true);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error in ProcessSpotifyAuth: " + ex.Message);
        }
    }
    // private bool isInitialized = false;

    // protected override async Task OnInitializedAsync()
    // {
    //     await Task.Delay(1000);
    //     Console.WriteLine("OnInitializedAsync called");
    //     await ProcessSpotifyAuth();
    //     isInitialized = true;
    // }

    // private async Task ProcessSpotifyAuth()
    // {
    //     Console.WriteLine("Processing Spotify authentication...");

    //     try
    //     {
    //         string spotifyAuthUrl = "https://localhost:7262/search";

    //         // ✅ Ensure NavigationManager gets the URL correctly
    //         var uri = new Uri(NavigationManager.Uri);
    //         var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
    //         string code = query["code"] ?? string.Empty;

    //         Console.WriteLine($"Extracted Spotify auth code: {code}");

    //         if (!string.IsNullOrEmpty(code))
    //         {
    //             // ✅ Process OAuth token exchange
    //             SpotifyAppServices spotifyAppServices = new SpotifyAppServices(_Configuration, ProtectedSessionStore);
    //             await spotifyAppServices.ExchangeCodeForToken(code);
    //             await spotifyAppServices.GetTokenAsync();

    //             // ✅ Store the token in session storage
    //             await ProtectedSessionStore.SetAsync("spotifyToken", code);
    //         }

    //         // ✅ Redirect after processing is complete
    //         NavigationManager.NavigateTo(spotifyAuthUrl, true);
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine("Error in ProcessSpotifyAuth: " + ex.Message);
    //     }
    // }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (isInitialized)
    //     {
    //         Console.WriteLine("OnAfterRenderAsync after OnInitializedAsync.");
    //         isInitialized = false;
    //         //await ProcessSpotifyAuth();
    //     }
    // }

    // private async Task ProcessSpotifyAuth()
    // {
    //     Console.WriteLine("Processing Spotify authentication...");

    //     try
    //     {
    //         //string spotifyAuthUrl = "https://localhost:7262/search";

    //         // ✅ Ensure NavigationManager is only used AFTER render
    //         var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
    //         var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
    //         string code = query["code"] ?? string.Empty;

    //         Console.WriteLine($"Extracted code: {code}");

    //         if (!string.IsNullOrEmpty(code))
    //         {
    //             SpotifyAppServices spotifyAppServices = new SpotifyAppServices(_Configuration, ProtectedSessionStore);

    //             await spotifyAppServices.ExchangeCodeForToken(code);
    //             await spotifyAppServices.GetTokenAsync();
    //         }

    //         // ✅ Redirect only after async operations complete
    //         //NavigationManager.NavigateTo(spotifyAuthUrl, true);
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine("Error in ProcessSpotifyAuth: " + ex.Message);
    //     }
    // }
    

    // private bool isInitialized = false;

    // protected override void OnInitialized()
    // {
    //     string spotifyAuthUrl = "https://localhost:7262/search";

    //     //isInitialized = true; // Prevent multiple executions
    //     SetCode();
    //     //await spotifyAppServices.GetTokenAsync();
    //     //await ProcessSpotifyAuth();

    //     //NavigationManager.NavigateTo(spotifyAuthUrl, true);
    // }

    // private async Task SetCode() {

    //     var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
    //     var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
    //     string code = query["code"] ?? string.Empty;

    //     ProtectedSessionStore.SetAsync("spotify_code", code);
    //     Console.WriteLine("session");
    // }


    // private async Task ProcessSpotifyAuth()
    // {
    //     Console.WriteLine("Processing Spotify authentication...");

    //     try
    //     {
    //         string spotifyAuthUrl = "https://localhost:7262/search";

    //         var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
    //         var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
    //         string code = query["code"] ?? string.Empty;

    //         Console.WriteLine($"Extracted code: {code}");

    //         if (!string.IsNullOrEmpty(code))
    //         {
    //             SpotifyAppServices spotifyAppServices = new SpotifyAppServices(_Configuration, ProtectedSessionStore);

    //             await spotifyAppServices.ExchangeCodeForToken(code);
    //             await spotifyAppServices.GetTokenAsync();
    //         }

    //         // Redirect only after async operations complete
    //         NavigationManager.NavigateTo(spotifyAuthUrl, true);
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine("Error in ProcessSpotifyAuth: " + ex.Message);
    //     }
    // }
    // public async Task<string> ExchangeCodeForToken(string code)
    // {

    //     var requestContent = new FormUrlEncodedContent(new[]
    //     {
    //         new KeyValuePair<string, string>("grant_type", "authorization_code"),
    //         new KeyValuePair<string, string>("code", code),
    //         new KeyValuePair<string, string>("redirect_uri", "https://localhost:7262/auth/spotifycallback"),
    //         new KeyValuePair<string, string>("client_id", "6c920f46f61c4d6f8274777f892531b7"),
    //         new KeyValuePair<string, string>("client_secret", "ee31b038d78f480fbee19414e0bb1575"),
    //     });

    //     var response = await Http.PostAsync("https://accounts.spotify.com/api/token", requestContent);
    //     var responseContent = await response.Content.ReadFromJsonAsync<SpotifyTokenResponse>();
    //     string token = null;
    //     if (responseContent != null)
    //     {
    //         token = responseContent.access_token;

    //         //await Task.Delay(500);
    //         //await JSRuntime.InvokeVoidAsync("console.log", "Storing token:", responseContent.access_token);
    //         //await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "spotify_token", responseContent.access_token);
    //         // Store the token securely (e.g., local storage or session)
    //         //*/*/*/*/*/*/Navigation.NavigateTo("/");*/*/*/*/*/*/
    //         //NavigationManager.NavigateTo("/search");
    //     }
    //     return token;
    //     // else
    //     //{
    //       //  NavigationManager.NavigateTo("/");
    //     //}
    // }

}
