@using SpotifyServices;

@inject NavigationManager _navigationManager
@inject IConfiguration _config
@inject HttpClient _httpClient
@inject SpotifyServices_TokenService _tokenService

@page "/"
@rendermode InteractiveServer

<PageTitle>Sign in</PageTitle>

<div style="text-align:center;padding:35vh 0 35vh 0">
    <p class="font-mono text-3xl font-medium text-gray-600" style="text-align:center;padding-bottom: 8px">Spotify Playlist Generator</p>
    <button class="font-sans text-lg font-bold rounded-md text-gray-600 border-2 border-orange-300 w-28 h-12 hover:bg-orange-300 hover:text-white transition duration-500 hover:rounded-3xl" @onclick="SpotifySignin">Sign in</button>
</div>

@code {
    private async Task SpotifySignin()
    {
        string? spotifyAuthUrl = null;

        try
        {
            SpotifyServices_Signin SpotifyServicesSignin = new SpotifyServices_Signin(_config, _httpClient, _tokenService);
            spotifyAuthUrl = SpotifyServicesSignin.SpotifySigninAuth();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error - SpotifySignin Ex: " + ex.Message);
        }

        if (!string.IsNullOrEmpty(spotifyAuthUrl))
        {
            _navigationManager.NavigateTo(spotifyAuthUrl, true);
        }
        else
        {
            Console.WriteLine("SpotifySignin: spotifyAuthUrl is null");
        }
    }
}